; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usb_hcd.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_hcd.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbh_mass_storage -I..\..\User\bsp_stm32f4xx\inc -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY --omf_browse=.\flash\obj\usb_hcd.crf ..\..\Libraries\STM32_USB_OTG_Driver\src\usb_hcd.c]
                          THUMB

                          AREA ||i.HCD_GetCurrentFrame||, CODE, READONLY, ALIGN=1

                  HCD_GetCurrentFrame PROC
;;;178      */
;;;179    uint32_t HCD_GetCurrentFrame (USB_OTG_CORE_HANDLE *pdev) 
000000  4601              MOV      r1,r0
;;;180    {
;;;181     return (USB_OTG_READ_REG32(&pdev->regs.HREGS->HFNUM) & 0xFFFF) ;
000002  6948              LDR      r0,[r1,#0x14]
000004  6880              LDR      r0,[r0,#8]
000006  b280              UXTH     r0,r0
;;;182    }
000008  4770              BX       lr
;;;183    
                          ENDP


                          AREA ||i.HCD_GetCurrentSpeed||, CODE, READONLY, ALIGN=1

                  HCD_GetCurrentSpeed PROC
;;;132    
;;;133    uint32_t HCD_GetCurrentSpeed (USB_OTG_CORE_HANDLE *pdev)
000000  b508              PUSH     {r3,lr}
;;;134    {    
000002  4601              MOV      r1,r0
;;;135        USB_OTG_HPRT0_TypeDef  HPRT0;
;;;136        HPRT0.d32 = USB_OTG_READ_REG32(pdev->regs.HPRT0);
000004  f8d100cc          LDR      r0,[r1,#0xcc]
000008  6800              LDR      r0,[r0,#0]
00000a  9000              STR      r0,[sp,#0]
;;;137        
;;;138        return HPRT0.b.prtspd;
00000c  9800              LDR      r0,[sp,#0]
00000e  f3c04041          UBFX     r0,r0,#17,#2
;;;139    }
000012  bd08              POP      {r3,pc}
;;;140    
                          ENDP


                          AREA ||i.HCD_GetHCState||, CODE, READONLY, ALIGN=1

                  HCD_GetHCState PROC
;;;216      */
;;;217    HC_STATUS HCD_GetHCState (USB_OTG_CORE_HANDLE *pdev ,  uint8_t ch_num) 
000000  4602              MOV      r2,r0
;;;218    {
;;;219      return pdev->host.HC_Status[ch_num] ;
000002  f5027063          ADD      r0,r2,#0x38c
000006  5c40              LDRB     r0,[r0,r1]
;;;220    }
000008  4770              BX       lr
;;;221    
                          ENDP


                          AREA ||i.HCD_GetURB_State||, CODE, READONLY, ALIGN=1

                  HCD_GetURB_State PROC
;;;190      */
;;;191    URB_STATE HCD_GetURB_State (USB_OTG_CORE_HANDLE *pdev , uint8_t ch_num) 
000000  4602              MOV      r2,r0
;;;192    {
;;;193      return pdev->host.URB_State[ch_num] ;
000002  f202309b          ADD      r0,r2,#0x39b
000006  5c40              LDRB     r0,[r0,r1]
;;;194    }
000008  4770              BX       lr
;;;195    
                          ENDP


                          AREA ||i.HCD_GetXferCnt||, CODE, READONLY, ALIGN=1

                  HCD_GetXferCnt PROC
;;;202      */
;;;203    uint32_t HCD_GetXferCnt (USB_OTG_CORE_HANDLE *pdev, uint8_t ch_num) 
000000  4602              MOV      r2,r0
;;;204    {
;;;205      return pdev->host.XferCnt[ch_num] ;
000002  f5027054          ADD      r0,r2,#0x350
000006  f8500021          LDR      r0,[r0,r1,LSL #2]
;;;206    }
00000a  4770              BX       lr
;;;207    
                          ENDP


                          AREA ||i.HCD_HC_Init||, CODE, READONLY, ALIGN=1

                  HCD_HC_Init PROC
;;;228      */
;;;229    uint32_t HCD_HC_Init (USB_OTG_CORE_HANDLE *pdev , uint8_t hc_num) 
000000  b570              PUSH     {r4-r6,lr}
;;;230    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;231      return USB_OTG_HC_Init(pdev, hc_num);  
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       USB_OTG_HC_Init
;;;232    }
00000e  bd70              POP      {r4-r6,pc}
;;;233    
                          ENDP


                          AREA ||i.HCD_Init||, CODE, READONLY, ALIGN=1

                  HCD_Init PROC
;;;96       */
;;;97     uint32_t HCD_Init(USB_OTG_CORE_HANDLE *pdev , 
000000  b570              PUSH     {r4-r6,lr}
;;;98                       USB_OTG_CORE_ID_TypeDef coreID)
;;;99     {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;100      uint8_t i = 0;
000006  2500              MOVS     r5,#0
;;;101      pdev->host.ConnSts = 0;
000008  2100              MOVS     r1,#0
00000a  f8c41310          STR      r1,[r4,#0x310]
;;;102      
;;;103      for (i= 0; i< USB_OTG_MAX_TX_FIFOS; i++)
00000e  bf00              NOP      
000010  e00b              B        |L7.42|
                  |L7.18|
;;;104      {
;;;105      pdev->host.ErrCnt[i]  = 0;
000012  2100              MOVS     r1,#0
000014  f5047045          ADD      r0,r4,#0x314
000018  f8401025          STR      r1,[r0,r5,LSL #2]
;;;106      pdev->host.XferCnt[i]   = 0;
00001c  303c              ADDS     r0,r0,#0x3c
00001e  f8401025          STR      r1,[r0,r5,LSL #2]
;;;107      pdev->host.HC_Status[i]   = HC_IDLE;
000022  303c              ADDS     r0,r0,#0x3c
000024  5541              STRB     r1,[r0,r5]
000026  1c68              ADDS     r0,r5,#1              ;103
000028  b2c5              UXTB     r5,r0                 ;103
                  |L7.42|
00002a  2d0f              CMP      r5,#0xf               ;103
00002c  dbf1              BLT      |L7.18|
;;;108      }
;;;109      pdev->host.hc[0].max_packet  = 8; 
00002e  2108              MOVS     r1,#8
000030  f8a413b2          STRH     r1,[r4,#0x3b2]
;;;110    
;;;111      USB_OTG_SelectCore(pdev, coreID);
000034  4631              MOV      r1,r6
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       USB_OTG_SelectCore
;;;112    #ifndef DUAL_ROLE_MODE_ENABLED
;;;113      USB_OTG_DisableGlobalInt(pdev);
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       USB_OTG_DisableGlobalInt
;;;114      USB_OTG_CoreInit(pdev);
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       USB_OTG_CoreInit
;;;115    
;;;116      /* Force Host Mode*/
;;;117      USB_OTG_SetCurrentMode(pdev , HOST_MODE);
000048  2101              MOVS     r1,#1
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       USB_OTG_SetCurrentMode
;;;118      USB_OTG_CoreInitHost(pdev);
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       USB_OTG_CoreInitHost
;;;119      USB_OTG_EnableGlobalInt(pdev);
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       USB_OTG_EnableGlobalInt
;;;120    #endif
;;;121       
;;;122      return 0;
00005c  2000              MOVS     r0,#0
;;;123    }
00005e  bd70              POP      {r4-r6,pc}
;;;124    
                          ENDP


                          AREA ||i.HCD_IsDeviceConnected||, CODE, READONLY, ALIGN=1

                  HCD_IsDeviceConnected PROC
;;;166      */
;;;167    uint32_t HCD_IsDeviceConnected(USB_OTG_CORE_HANDLE *pdev)
000000  4601              MOV      r1,r0
;;;168    {
;;;169      return (pdev->host.ConnSts);
000002  f8d10310          LDR      r0,[r1,#0x310]
;;;170    }
000006  4770              BX       lr
;;;171    
                          ENDP


                          AREA ||i.HCD_ResetPort||, CODE, READONLY, ALIGN=1

                  HCD_ResetPort PROC
;;;146      */
;;;147    uint32_t HCD_ResetPort(USB_OTG_CORE_HANDLE *pdev)
000000  b510              PUSH     {r4,lr}
;;;148    {
000002  4604              MOV      r4,r0
;;;149      /*
;;;150      Before starting to drive a USB reset, the application waits for the OTG 
;;;151      interrupt triggered by the debounce done bit (DBCDNE bit in OTG_FS_GOTGINT), 
;;;152      which indicates that the bus is stable again after the electrical debounce 
;;;153      caused by the attachment of a pull-up resistor on DP (FS) or DM (LS).
;;;154      */
;;;155      
;;;156      USB_OTG_ResetPort(pdev); 
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       USB_OTG_ResetPort
;;;157      return 0;
00000a  2000              MOVS     r0,#0
;;;158    }
00000c  bd10              POP      {r4,pc}
;;;159    
                          ENDP


                          AREA ||i.HCD_SubmitRequest||, CODE, READONLY, ALIGN=1

                  HCD_SubmitRequest PROC
;;;240      */
;;;241    uint32_t HCD_SubmitRequest (USB_OTG_CORE_HANDLE *pdev , uint8_t hc_num) 
000000  b570              PUSH     {r4-r6,lr}
;;;242    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;243      
;;;244      pdev->host.URB_State[hc_num] =   URB_IDLE;  
000006  2100              MOVS     r1,#0
000008  f204309b          ADD      r0,r4,#0x39b
00000c  5541              STRB     r1,[r0,r5]
;;;245      pdev->host.hc[hc_num].xfer_count = 0 ;
00000e  3011              ADDS     r0,r0,#0x11
000010  eb001045          ADD      r0,r0,r5,LSL #5
000014  6141              STR      r1,[r0,#0x14]
;;;246      return USB_OTG_HC_StartXfer(pdev, hc_num);
000016  4629              MOV      r1,r5
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       USB_OTG_HC_StartXfer
;;;247    }
00001e  bd70              POP      {r4-r6,pc}
;;;248    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32_USB_OTG_Driver\\src\\usb_hcd.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_hcd_c_HCD_Init____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_usb_hcd_c_HCD_Init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_usb_hcd_c_HCD_Init____REVSH|
#line 144
|__asm___9_usb_hcd_c_HCD_Init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
