; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usbh_usr.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usbh_usr.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbh_mass_storage -I..\..\User\bsp_stm32f4xx\inc -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY --omf_browse=.\flash\obj\usbh_usr.crf ..\..\User\usbh_mass_storage\usbh_usr.c]
                          THUMB

                          AREA ||i.USBH_USR_Configuration_DescAvailable||, CODE, READONLY, ALIGN=2

                  USBH_USR_Configuration_DescAvailable PROC
;;;246    */
;;;247    void USBH_USR_Configuration_DescAvailable(USBH_CfgDesc_TypeDef * cfgDesc,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;248                                              USBH_InterfaceDesc_TypeDef *itfDesc,
;;;249                                              USBH_EpDesc_TypeDef *epDesc)
;;;250    {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
;;;251    	USBH_InterfaceDesc_TypeDef *id;
;;;252    
;;;253    	id = itfDesc;
00000a  4625              MOV      r5,r4
;;;254    
;;;255    	if((*id).bInterfaceClass  == 0x08)
00000c  7968              LDRB     r0,[r5,#5]
00000e  2808              CMP      r0,#8
000010  d103              BNE      |L1.26|
;;;256    	{
;;;257    		usb_printf((char *)MSG_MSC_CLASS);
000012  4806              LDR      r0,|L1.44|
000014  f7fffffe          BL       __2printf
000018  e005              B        |L1.38|
                  |L1.26|
;;;258    	}
;;;259    	else if((*id).bInterfaceClass  == 0x03)
00001a  7968              LDRB     r0,[r5,#5]
00001c  2803              CMP      r0,#3
00001e  d102              BNE      |L1.38|
;;;260    	{
;;;261    		usb_printf((char *)MSG_HID_CLASS);
000020  4803              LDR      r0,|L1.48|
000022  f7fffffe          BL       __2printf
                  |L1.38|
;;;262    	}
;;;263    }
000026  e8bd81f0          POP      {r4-r8,pc}
;;;264    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      MSG_MSC_CLASS
                  |L1.48|
                          DCD      MSG_HID_CLASS

                          AREA ||i.USBH_USR_DeInit||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeInit PROC
;;;390    */
;;;391    void USBH_USR_DeInit(void)
000000  2000              MOVS     r0,#0
;;;392    {
;;;393    	USBH_USR_ApplicationState = USH_USR_FS_INIT;
000002  4901              LDR      r1,|L2.8|
000004  7008              STRB     r0,[r1,#0]
;;;394    }
000006  4770              BX       lr
;;;395    
                          ENDP

                  |L2.8|
                          DCD      USBH_USR_ApplicationState

                          AREA ||i.USBH_USR_DeviceAddressAssigned||, CODE, READONLY, ALIGN=1

                  USBH_USR_DeviceAddressAssigned PROC
;;;234    */
;;;235    void USBH_USR_DeviceAddressAssigned(void)
000000  4770              BX       lr
;;;236    {
;;;237    
;;;238    }
;;;239    
                          ENDP


                          AREA ||i.USBH_USR_DeviceAttached||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeviceAttached PROC
;;;146    */
;;;147    void USBH_USR_DeviceAttached(void)
000000  b510              PUSH     {r4,lr}
;;;148    {
;;;149    	usb_printf((char *)MSG_DEV_ATTACHED);
000002  4802              LDR      r0,|L4.12|
000004  f7fffffe          BL       __2printf
;;;150    }
000008  bd10              POP      {r4,pc}
;;;151    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      MSG_DEV_ATTACHED

                          AREA ||i.USBH_USR_DeviceDisconnected||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeviceDisconnected PROC
;;;169    */
;;;170    void USBH_USR_DeviceDisconnected (void)
000000  b510              PUSH     {r4,lr}
;;;171    {
;;;172    	/* 卸载文件系统 */
;;;173    	f_mount(FS_SD, NULL);
000002  2100              MOVS     r1,#0
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       f_mount
;;;174    	usb_printf((char *)MSG_DEV_DISCONNECTED);
00000a  4802              LDR      r0,|L5.20|
00000c  f7fffffe          BL       __2printf
;;;175    }
000010  bd10              POP      {r4,pc}
;;;176    /**
                          ENDP

000012  0000              DCW      0x0000
                  |L5.20|
                          DCD      MSG_DEV_DISCONNECTED

                          AREA ||i.USBH_USR_DeviceNotSupported||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeviceNotSupported PROC
;;;316    */
;;;317    void USBH_USR_DeviceNotSupported(void)
000000  b510              PUSH     {r4,lr}
;;;318    {
;;;319    	usb_printf ("> Device not supported.\r\n");
000002  a002              ADR      r0,|L6.12|
000004  f7fffffe          BL       __2printf
;;;320    }
000008  bd10              POP      {r4,pc}
;;;321    
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
00000c  3e204465          DCB      "> Device not supported.\r\n",0
000010  76696365
000014  206e6f74
000018  20737570
00001c  706f7274
000020  65642e0d
000024  0a00    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.USBH_USR_DeviceSpeedDetected||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeviceSpeedDetected PROC
;;;193    */
;;;194    void USBH_USR_DeviceSpeedDetected(uint8_t DeviceSpeed)
000000  b510              PUSH     {r4,lr}
;;;195    {
000002  4604              MOV      r4,r0
;;;196    	if (DeviceSpeed == HPRT0_PRTSPD_HIGH_SPEED)
000004  b91c              CBNZ     r4,|L7.14|
;;;197    	{
;;;198    		usb_printf((char *)MSG_DEV_HIGHSPEED);
000006  480a              LDR      r0,|L7.48|
000008  f7fffffe          BL       __2printf
00000c  e00e              B        |L7.44|
                  |L7.14|
;;;199    	}
;;;200    	else if(DeviceSpeed == HPRT0_PRTSPD_FULL_SPEED)
00000e  2c01              CMP      r4,#1
000010  d103              BNE      |L7.26|
;;;201    	{
;;;202    		usb_printf((char *)MSG_DEV_FULLSPEED);
000012  4808              LDR      r0,|L7.52|
000014  f7fffffe          BL       __2printf
000018  e008              B        |L7.44|
                  |L7.26|
;;;203    	}
;;;204    	else if(DeviceSpeed == HPRT0_PRTSPD_LOW_SPEED)
00001a  2c02              CMP      r4,#2
00001c  d103              BNE      |L7.38|
;;;205    	{
;;;206    		usb_printf((char *)MSG_DEV_LOWSPEED);
00001e  4806              LDR      r0,|L7.56|
000020  f7fffffe          BL       __2printf
000024  e002              B        |L7.44|
                  |L7.38|
;;;207    	}
;;;208    	else
;;;209    	{
;;;210    		usb_printf((char *)MSG_DEV_ERROR);
000026  4805              LDR      r0,|L7.60|
000028  f7fffffe          BL       __2printf
                  |L7.44|
;;;211    	}
;;;212    }
00002c  bd10              POP      {r4,pc}
;;;213    
                          ENDP

00002e  0000              DCW      0x0000
                  |L7.48|
                          DCD      MSG_DEV_HIGHSPEED
                  |L7.52|
                          DCD      MSG_DEV_FULLSPEED
                  |L7.56|
                          DCD      MSG_DEV_LOWSPEED
                  |L7.60|
                          DCD      MSG_DEV_ERROR

                          AREA ||i.USBH_USR_Device_DescAvailable||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  USBH_USR_Device_DescAvailable PROC
;;;219    */
;;;220    void USBH_USR_Device_DescAvailable(void *DeviceDesc)
000000  b570              PUSH     {r4-r6,lr}
;;;221    {
000002  4604              MOV      r4,r0
;;;222    	USBH_DevDesc_TypeDef *hs;
;;;223    	hs = DeviceDesc;
000004  4625              MOV      r5,r4
;;;224    
;;;225    	usb_printf("> VID : %04Xh\r\n" , (uint32_t)(*hs).idVendor);
000006  8929              LDRH     r1,[r5,#8]
000008  a003              ADR      r0,|L8.24|
00000a  f7fffffe          BL       __2printf
;;;226    	usb_printf("> PID : %04Xh\r\n" , (uint32_t)(*hs).idProduct);
00000e  8969              LDRH     r1,[r5,#0xa]
000010  a005              ADR      r0,|L8.40|
000012  f7fffffe          BL       __2printf
;;;227    }
000016  bd70              POP      {r4-r6,pc}
;;;228    
                          ENDP

                  |L8.24|
000018  3e205649          DCB      "> VID : %04Xh\r\n",0
00001c  44203a20
000020  25303458
000024  680d0a00
                  |L8.40|
000028  3e205049          DCB      "> PID : %04Xh\r\n",0
00002c  44203a20
000030  25303458
000034  680d0a00

                          AREA ||i.USBH_USR_EnumerationDone||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                  USBH_USR_EnumerationDone PROC
;;;303    */
;;;304    void USBH_USR_EnumerationDone(void)
000000  b510              PUSH     {r4,lr}
;;;305    {
;;;306    	/* Enumeration complete */
;;;307    	usb_printf((void *)MSG_DEV_ENUMERATED);
000002  4802              LDR      r0,|L9.12|
000004  f7fffffe          BL       __2printf
;;;308    }
000008  bd10              POP      {r4,pc}
;;;309    
                          ENDP

00000a  0000              DCW      0x0000
                  |L9.12|
                          DCD      MSG_DEV_ENUMERATED

                          AREA ||i.USBH_USR_Init||, CODE, READONLY, ALIGN=2

                  USBH_USR_Init PROC
;;;122    */
;;;123    void USBH_USR_Init(void)
000000  b510              PUSH     {r4,lr}
;;;124    {
;;;125    	static uint8_t startup = 0;
;;;126    
;;;127    	if(startup == 0 )
000002  4808              LDR      r0,|L10.36|
000004  7800              LDRB     r0,[r0,#0]  ; startup
000006  b958              CBNZ     r0,|L10.32|
;;;128    	{
;;;129    		startup = 1;
000008  2001              MOVS     r0,#1
00000a  4906              LDR      r1,|L10.36|
00000c  7008              STRB     r0,[r1,#0]
;;;130    
;;;131    		#ifdef USE_USB_OTG_HS
;;;132    			usb_printf("> USB OTG HS MSC Host\r\n");
00000e  a006              ADR      r0,|L10.40|
000010  f7fffffe          BL       __2printf
;;;133    		#else
;;;134    			usb_printf("> USB OTG FS MSC Host\r\n");
;;;135    		#endif
;;;136    		usb_printf("> USB Host library started.\r\n");
000014  a00a              ADR      r0,|L10.64|
000016  f7fffffe          BL       __2printf
;;;137    		usb_printf ("     USB Host Library v2.1.0\r\n" );
00001a  a011              ADR      r0,|L10.96|
00001c  f7fffffe          BL       __2printf
                  |L10.32|
;;;138    	}
;;;139    }
000020  bd10              POP      {r4,pc}
;;;140    
                          ENDP

000022  0000              DCW      0x0000
                  |L10.36|
                          DCD      startup
                  |L10.40|
000028  3e205553          DCB      "> USB OTG HS MSC Host\r\n",0
00002c  42204f54
000030  47204853
000034  204d5343
000038  20486f73
00003c  740d0a00
                  |L10.64|
000040  3e205553          DCB      "> USB Host library started.\r\n",0
000044  4220486f
000048  7374206c
00004c  69627261
000050  72792073
000054  74617274
000058  65642e0d
00005c  0a00    
00005e  00                DCB      0
00005f  00                DCB      0
                  |L10.96|
000060  20202020          DCB      "     USB Host Library v2.1.0\r\n",0
000064  20555342
000068  20486f73
00006c  74204c69
000070  62726172
000074  79207632
000078  2e312e30
00007c  0d0a00  
00007f  00                DCB      0

                          AREA ||i.USBH_USR_MSC_Application||, CODE, READONLY, ALIGN=2

                  USBH_USR_MSC_Application PROC
;;;364    */
;;;365    int USBH_USR_MSC_Application(void)
000000  b510              PUSH     {r4,lr}
;;;366    {
;;;367    	switch(USBH_USR_ApplicationState)
000002  480a              LDR      r0,|L11.44|
000004  7800              LDRB     r0,[r0,#0]  ; USBH_USR_ApplicationState
000006  b110              CBZ      r0,|L11.14|
000008  2801              CMP      r0,#1
00000a  d10c              BNE      |L11.38|
00000c  e005              B        |L11.26|
                  |L11.14|
;;;368    	{
;;;369    		case USH_USR_FS_INIT:
;;;370    			//ViewRootDir();
;;;371    			ush_usr_fs_init();
00000e  f7fffffe          BL       ush_usr_fs_init
;;;372    		
;;;373    			USBH_USR_ApplicationState = USH_USR_FS_READLIST;
000012  2001              MOVS     r0,#1
000014  4905              LDR      r1,|L11.44|
000016  7008              STRB     r0,[r1,#0]
;;;374    			break;
000018  e005              B        |L11.38|
                  |L11.26|
;;;375    		case USH_USR_FS_READLIST:
;;;376    			ush_usr_action();
00001a  f7fffffe          BL       ush_usr_action
;;;377    			
;;;378    			USBH_USR_ApplicationState = USH_USR_FS_READLIST;
00001e  2001              MOVS     r0,#1
000020  4902              LDR      r1,|L11.44|
000022  7008              STRB     r0,[r1,#0]
;;;379    			break;
000024  bf00              NOP      
                  |L11.38|
000026  bf00              NOP                            ;374
;;;380    		
;;;381    	}
;;;382    	return 0;
000028  2000              MOVS     r0,#0
;;;383    }
00002a  bd10              POP      {r4,pc}
;;;384    
                          ENDP

                  |L11.44|
                          DCD      USBH_USR_ApplicationState

                          AREA ||i.USBH_USR_Manufacturer_String||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  USBH_USR_Manufacturer_String PROC
;;;270    */
;;;271    void USBH_USR_Manufacturer_String(void *ManufacturerString)
000000  b510              PUSH     {r4,lr}
;;;272    {
000002  4604              MOV      r4,r0
;;;273    	usb_printf("> Manufacturer : %sr\r\n", (char *)ManufacturerString);
000004  4621              MOV      r1,r4
000006  a002              ADR      r0,|L12.16|
000008  f7fffffe          BL       __2printf
;;;274    }
00000c  bd10              POP      {r4,pc}
;;;275    
                          ENDP

00000e  0000              DCW      0x0000
                  |L12.16|
000010  3e204d61          DCB      "> Manufacturer : %sr\r\n",0
000014  6e756661
000018  63747572
00001c  6572203a
000020  20257372
000024  0d0a00  
000027  00                DCB      0

                          AREA ||i.USBH_USR_OverCurrentDetected||, CODE, READONLY, ALIGN=2

                  USBH_USR_OverCurrentDetected PROC
;;;353    */
;;;354    void USBH_USR_OverCurrentDetected (void)
000000  b510              PUSH     {r4,lr}
;;;355    {
;;;356    	usb_printf("> Overcurrent detected.\r\n");
000002  a002              ADR      r0,|L13.12|
000004  f7fffffe          BL       __2printf
;;;357    }
000008  bd10              POP      {r4,pc}
;;;358    
                          ENDP

00000a  0000              DCW      0x0000
                  |L13.12|
00000c  3e204f76          DCB      "> Overcurrent detected.\r\n",0
000010  65726375
000014  7272656e
000018  74206465
00001c  74656374
000020  65642e0d
000024  0a00    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.USBH_USR_Product_String||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  USBH_USR_Product_String PROC
;;;281    */
;;;282    void USBH_USR_Product_String(void *ProductString)
000000  b510              PUSH     {r4,lr}
;;;283    {
000002  4604              MOV      r4,r0
;;;284    	usb_printf("> Product : %s\r\n", (char *)ProductString);
000004  4621              MOV      r1,r4
000006  a002              ADR      r0,|L14.16|
000008  f7fffffe          BL       __2printf
;;;285    }
00000c  bd10              POP      {r4,pc}
;;;286    
                          ENDP

00000e  0000              DCW      0x0000
                  |L14.16|
000010  3e205072          DCB      "> Product : %s\r\n",0
000014  6f647563
000018  74203a20
00001c  25730d0a
000020  00      
000021  00                DCB      0
000022  00                DCB      0
000023  00                DCB      0

                          AREA ||i.USBH_USR_ResetDevice||, CODE, READONLY, ALIGN=2

                  USBH_USR_ResetDevice PROC
;;;180    */
;;;181    void USBH_USR_ResetDevice(void)
000000  b510              PUSH     {r4,lr}
;;;182    {
;;;183    	/* callback for USB-Reset */
;;;184    	usb_printf("> USBH_USR_ResetDevice \r\n");
000002  a002              ADR      r0,|L15.12|
000004  f7fffffe          BL       __2printf
;;;185    }
000008  bd10              POP      {r4,pc}
;;;186    
                          ENDP

00000a  0000              DCW      0x0000
                  |L15.12|
00000c  3e205553          DCB      "> USBH_USR_ResetDevice \r\n",0
000010  42485f55
000014  53525f52
000018  65736574
00001c  44657669
000020  6365200d
000024  0a00    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.USBH_USR_SerialNum_String||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  USBH_USR_SerialNum_String PROC
;;;292    */
;;;293    void USBH_USR_SerialNum_String(void *SerialNumString)
000000  b510              PUSH     {r4,lr}
;;;294    {
000002  4604              MOV      r4,r0
;;;295    	usb_printf( "> Serial Number : %s\r\n", (char *)SerialNumString);
000004  4621              MOV      r1,r4
000006  a002              ADR      r0,|L16.16|
000008  f7fffffe          BL       __2printf
;;;296    }
00000c  bd10              POP      {r4,pc}
;;;297    
                          ENDP

00000e  0000              DCW      0x0000
                  |L16.16|
000010  3e205365          DCB      "> Serial Number : %s\r\n",0
000014  7269616c
000018  204e756d
00001c  62657220
000020  3a202573
000024  0d0a00  
000027  00                DCB      0

                          AREA ||i.USBH_USR_UnrecoveredError||, CODE, READONLY, ALIGN=2

                  USBH_USR_UnrecoveredError PROC
;;;157    */
;;;158    void USBH_USR_UnrecoveredError (void)
000000  b510              PUSH     {r4,lr}
;;;159    {
;;;160    	usb_printf((char *)MSG_UNREC_ERROR);
000002  4802              LDR      r0,|L17.12|
000004  f7fffffe          BL       __2printf
;;;161    }
000008  bd10              POP      {r4,pc}
;;;162    
                          ENDP

00000a  0000              DCW      0x0000
                  |L17.12|
                          DCD      MSG_UNREC_ERROR

                          AREA ||i.USBH_USR_UserInput||, CODE, READONLY, ALIGN=1

                  USBH_USR_UserInput PROC
;;;327    */
;;;328    USBH_USR_Status USBH_USR_UserInput(void)
000000  2001              MOVS     r0,#1
;;;329    {
;;;330    #if 1
;;;331    	return USBH_USR_RESP_OK;
;;;332    #else
;;;333    	USBH_USR_Status usbh_usr_status;
;;;334    
;;;335    	usbh_usr_status = USBH_USR_NO_RESP;
;;;336    
;;;337    	#if 0
;;;338    	/*Key B3 is in polling mode to detect user action */
;;;339    	if(STM_EVAL_PBGetState(Button_KEY) == RESET)
;;;340    	{
;;;341    		usbh_usr_status = USBH_USR_RESP_OK;
;;;342    	}
;;;343    	#endif
;;;344    	return usbh_usr_status;
;;;345    #endif
;;;346    }
000002  4770              BX       lr
;;;347    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  USB_OTG_Core
                          %        1452
                  USB_Host
                          %        132

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  MSG_HOST_INIT
000000  3e20486f          DCB      0x3e,0x20,0x48,0x6f
000004  7374204c          DCB      0x73,0x74,0x20,0x4c
000008  69627261          DCB      0x69,0x62,0x72,0x61
00000c  72792049          DCB      0x72,0x79,0x20,0x49
000010  6e697469          DCB      0x6e,0x69,0x74,0x69
000014  616c697a          DCB      0x61,0x6c,0x69,0x7a
000018  65640d0a          DCB      0x65,0x64,0x0d,0x0a
00001c  00                DCB      0x00
                  MSG_DEV_ATTACHED
00001d  3e2044            DCB      0x3e,0x20,0x44
000020  65766963          DCB      0x65,0x76,0x69,0x63
000024  65204174          DCB      0x65,0x20,0x41,0x74
000028  74616368          DCB      0x74,0x61,0x63,0x68
00002c  6564200d          DCB      0x65,0x64,0x20,0x0d
000030  0a00              DCB      0x0a,0x00
                  MSG_DEV_DISCONNECTED
000032  3e20              DCB      0x3e,0x20
000034  44657669          DCB      0x44,0x65,0x76,0x69
000038  63652044          DCB      0x63,0x65,0x20,0x44
00003c  6973636f          DCB      0x69,0x73,0x63,0x6f
000040  6e6e6563          DCB      0x6e,0x6e,0x65,0x63
000044  7465640d          DCB      0x74,0x65,0x64,0x0d
000048  0a00              DCB      0x0a,0x00
                  MSG_DEV_ENUMERATED
00004a  3e20              DCB      0x3e,0x20
00004c  456e756d          DCB      0x45,0x6e,0x75,0x6d
000050  65726174          DCB      0x65,0x72,0x61,0x74
000054  696f6e20          DCB      0x69,0x6f,0x6e,0x20
000058  636f6d70          DCB      0x63,0x6f,0x6d,0x70
00005c  6c657465          DCB      0x6c,0x65,0x74,0x65
000060  64200d0a          DCB      0x64,0x20,0x0d,0x0a
000064  00                DCB      0x00
                  MSG_DEV_HIGHSPEED
000065  3e2048            DCB      0x3e,0x20,0x48
000068  69676820          DCB      0x69,0x67,0x68,0x20
00006c  73706565          DCB      0x73,0x70,0x65,0x65
000070  64206465          DCB      0x64,0x20,0x64,0x65
000074  76696365          DCB      0x76,0x69,0x63,0x65
000078  20646574          DCB      0x20,0x64,0x65,0x74
00007c  65637465          DCB      0x65,0x63,0x74,0x65
000080  640d0a00          DCB      0x64,0x0d,0x0a,0x00
                  MSG_DEV_FULLSPEED
000084  3e204675          DCB      0x3e,0x20,0x46,0x75
000088  6c6c2073          DCB      0x6c,0x6c,0x20,0x73
00008c  70656564          DCB      0x70,0x65,0x65,0x64
000090  20646576          DCB      0x20,0x64,0x65,0x76
000094  69636520          DCB      0x69,0x63,0x65,0x20
000098  64657465          DCB      0x64,0x65,0x74,0x65
00009c  63746564          DCB      0x63,0x74,0x65,0x64
0000a0  0d0a00            DCB      0x0d,0x0a,0x00
                  MSG_DEV_LOWSPEED
0000a3  3e                DCB      0x3e
0000a4  204c6f77          DCB      0x20,0x4c,0x6f,0x77
0000a8  20737065          DCB      0x20,0x73,0x70,0x65
0000ac  65642064          DCB      0x65,0x64,0x20,0x64
0000b0  65766963          DCB      0x65,0x76,0x69,0x63
0000b4  65206465          DCB      0x65,0x20,0x64,0x65
0000b8  74656374          DCB      0x74,0x65,0x63,0x74
0000bc  65640d0a          DCB      0x65,0x64,0x0d,0x0a
0000c0  00                DCB      0x00
                  MSG_DEV_ERROR
0000c1  3e2044            DCB      0x3e,0x20,0x44
0000c4  65766963          DCB      0x65,0x76,0x69,0x63
0000c8  65206661          DCB      0x65,0x20,0x66,0x61
0000cc  756c7420          DCB      0x75,0x6c,0x74,0x20
0000d0  0d0a00            DCB      0x0d,0x0a,0x00
                  MSG_MSC_CLASS
0000d3  3e                DCB      0x3e
0000d4  204d6173          DCB      0x20,0x4d,0x61,0x73
0000d8  73207374          DCB      0x73,0x20,0x73,0x74
0000dc  6f726167          DCB      0x6f,0x72,0x61,0x67
0000e0  65206465          DCB      0x65,0x20,0x64,0x65
0000e4  76696365          DCB      0x76,0x69,0x63,0x65
0000e8  20636f6e          DCB      0x20,0x63,0x6f,0x6e
0000ec  6e656374          DCB      0x6e,0x65,0x63,0x74
0000f0  65640d0a          DCB      0x65,0x64,0x0d,0x0a
0000f4  00                DCB      0x00
                  MSG_HID_CLASS
0000f5  3e2048            DCB      0x3e,0x20,0x48
0000f8  49442064          DCB      0x49,0x44,0x20,0x64
0000fc  65766963          DCB      0x65,0x76,0x69,0x63
000100  6520636f          DCB      0x65,0x20,0x63,0x6f
000104  6e6e6563          DCB      0x6e,0x6e,0x65,0x63
000108  7465640d          DCB      0x74,0x65,0x64,0x0d
00010c  0a00              DCB      0x0a,0x00
                  MSG_DISK_SIZE
00010e  3e20              DCB      0x3e,0x20
000110  53697a65          DCB      0x53,0x69,0x7a,0x65
000114  206f6620          DCB      0x20,0x6f,0x66,0x20
000118  74686520          DCB      0x74,0x68,0x65,0x20
00011c  6469736b          DCB      0x64,0x69,0x73,0x6b
000120  20696e20          DCB      0x20,0x69,0x6e,0x20
000124  4d427974          DCB      0x4d,0x42,0x79,0x74
000128  65733a20          DCB      0x65,0x73,0x3a,0x20
00012c  0d0a00            DCB      0x0d,0x0a,0x00
                  MSG_LUN
00012f  3e                DCB      0x3e
000130  204c554e          DCB      0x20,0x4c,0x55,0x4e
000134  20417661          DCB      0x20,0x41,0x76,0x61
000138  696c6162          DCB      0x69,0x6c,0x61,0x62
00013c  6c652069          DCB      0x6c,0x65,0x20,0x69
000140  6e207468          DCB      0x6e,0x20,0x74,0x68
000144  65206465          DCB      0x65,0x20,0x64,0x65
000148  76696365          DCB      0x76,0x69,0x63,0x65
00014c  3a0d0a00          DCB      0x3a,0x0d,0x0a,0x00
                  MSG_ROOT_CONT
000150  3e204578          DCB      0x3e,0x20,0x45,0x78
000154  706c6f72          DCB      0x70,0x6c,0x6f,0x72
000158  696e6720          DCB      0x69,0x6e,0x67,0x20
00015c  6469736b          DCB      0x64,0x69,0x73,0x6b
000160  20666c61          DCB      0x20,0x66,0x6c,0x61
000164  7368202e          DCB      0x73,0x68,0x20,0x2e
000168  2e2e0d0a          DCB      0x2e,0x2e,0x0d,0x0a
00016c  00                DCB      0x00
                  MSG_WR_PROTECT
00016d  3e2054            DCB      0x3e,0x20,0x54
000170  68652064          DCB      0x68,0x65,0x20,0x64
000174  69736b20          DCB      0x69,0x73,0x6b,0x20
000178  69732077          DCB      0x69,0x73,0x20,0x77
00017c  72697465          DCB      0x72,0x69,0x74,0x65
000180  2070726f          DCB      0x20,0x70,0x72,0x6f
000184  74656374          DCB      0x74,0x65,0x63,0x74
000188  65640d0a          DCB      0x65,0x64,0x0d,0x0a
00018c  00                DCB      0x00
                  MSG_UNREC_ERROR
00018d  3e2055            DCB      0x3e,0x20,0x55
000190  4e524543          DCB      0x4e,0x52,0x45,0x43
000194  4f564552          DCB      0x4f,0x56,0x45,0x52
000198  45442045          DCB      0x45,0x44,0x20,0x45
00019c  52524f52          DCB      0x52,0x52,0x4f,0x52
0001a0  20535441          DCB      0x20,0x53,0x54,0x41
0001a4  54450d0a          DCB      0x54,0x45,0x0d,0x0a
0001a8  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  USBH_USR_ApplicationState
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  USR_cb
                          DCD      USBH_USR_Init
                          DCD      USBH_USR_DeInit
                          DCD      USBH_USR_DeviceAttached
                          DCD      USBH_USR_ResetDevice
                          DCD      USBH_USR_DeviceDisconnected
                          DCD      USBH_USR_OverCurrentDetected
                          DCD      USBH_USR_DeviceSpeedDetected
                          DCD      USBH_USR_Device_DescAvailable
                          DCD      USBH_USR_DeviceAddressAssigned
                          DCD      USBH_USR_Configuration_DescAvailable
                          DCD      USBH_USR_Manufacturer_String
                          DCD      USBH_USR_Product_String
                          DCD      USBH_USR_SerialNum_String
                          DCD      USBH_USR_EnumerationDone
                          DCD      USBH_USR_UserInput
                          DCD      USBH_USR_MSC_Application
                          DCD      USBH_USR_DeviceNotSupported
                          DCD      USBH_USR_UnrecoveredError
                  startup
00004c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\usbh_mass_storage\\usbh_usr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usbh_usr_c_10f38c24____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usbh_usr_c_10f38c24____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usbh_usr_c_10f38c24____REVSH|
#line 144
|__asm___10_usbh_usr_c_10f38c24____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
