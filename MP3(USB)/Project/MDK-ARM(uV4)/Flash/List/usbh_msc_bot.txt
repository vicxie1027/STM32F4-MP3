; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\usbh_msc_bot.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usbh_msc_bot.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\User\bsp_stm32f4xx\inc -I..\..\User\bsp_stm32f4xx -I..\..\User -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc -I..\..\Libraries\STM32_USB_HOST_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbh_mass_storage -I..\..\User\bsp_stm32f4xx\inc -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F407xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_HS -DUSE_EMBEDDED_PHY --omf_browse=.\flash\obj\usbh_msc_bot.crf ..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\src\usbh_msc_bot.c]
                          THUMB

                          AREA ||i.USBH_MSC_BOT_Abort||, CODE, READONLY, ALIGN=2

                  USBH_MSC_BOT_Abort PROC
;;;450    */
;;;451    USBH_Status USBH_MSC_BOT_Abort(USB_OTG_CORE_HANDLE *pdev, 
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;452                                   USBH_HOST *phost,
;;;453                                   uint8_t direction)
;;;454    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;455      USBH_Status status;
;;;456      
;;;457      status = USBH_BUSY;
00000a  2701              MOVS     r7,#1
;;;458      
;;;459      switch (direction)
00000c  b114              CBZ      r4,|L1.20|
00000e  2c01              CMP      r4,#1
000010  d112              BNE      |L1.56|
000012  e008              B        |L1.38|
                  |L1.20|
;;;460      {
;;;461      case USBH_MSC_DIR_IN :
;;;462        /* send ClrFeture on Bulk IN endpoint */
;;;463        status = USBH_ClrFeature(pdev,
000014  4810              LDR      r0,|L1.88|
000016  7803              LDRB     r3,[r0,#0]  ; MSC_Machine
000018  78c2              LDRB     r2,[r0,#3]  ; MSC_Machine
00001a  4631              MOV      r1,r6
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       USBH_ClrFeature
000022  4607              MOV      r7,r0
;;;464                                 phost,
;;;465                                 MSC_Machine.MSBulkInEp,
;;;466                                 MSC_Machine.hc_num_in);
;;;467        
;;;468        break;
000024  e009              B        |L1.58|
                  |L1.38|
;;;469        
;;;470      case USBH_MSC_DIR_OUT :
;;;471        /*send ClrFeature on Bulk OUT endpoint */
;;;472        status = USBH_ClrFeature(pdev, 
000026  480c              LDR      r0,|L1.88|
000028  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
00002a  7882              LDRB     r2,[r0,#2]  ; MSC_Machine
00002c  4631              MOV      r1,r6
00002e  4628              MOV      r0,r5
000030  f7fffffe          BL       USBH_ClrFeature
000034  4607              MOV      r7,r0
;;;473                                 phost,
;;;474                                 MSC_Machine.MSBulkOutEp,
;;;475                                 MSC_Machine.hc_num_out);
;;;476        break;
000036  e000              B        |L1.58|
                  |L1.56|
;;;477        
;;;478      default:
;;;479        break;
000038  bf00              NOP      
                  |L1.58|
00003a  bf00              NOP                            ;468
;;;480      }
;;;481      
;;;482      BOTStallErrorCount++; /* Check Continous Number of times, STALL has Occured */ 
00003c  4807              LDR      r0,|L1.92|
00003e  6800              LDR      r0,[r0,#0]  ; BOTStallErrorCount
000040  1c40              ADDS     r0,r0,#1
000042  4906              LDR      r1,|L1.92|
000044  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;483      if (BOTStallErrorCount > MAX_BULK_STALL_COUNT_LIMIT )
000046  4608              MOV      r0,r1
000048  6800              LDR      r0,[r0,#0]  ; BOTStallErrorCount
00004a  2804              CMP      r0,#4
00004c  d900              BLS      |L1.80|
;;;484      {
;;;485        status = USBH_UNRECOVERED_ERROR;
00004e  2704              MOVS     r7,#4
                  |L1.80|
;;;486      }
;;;487      
;;;488      return status;
000050  4638              MOV      r0,r7
;;;489    }
000052  e8bd81f0          POP      {r4-r8,pc}
;;;490    
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      MSC_Machine
                  |L1.92|
                          DCD      BOTStallErrorCount

                          AREA ||i.USBH_MSC_DecodeCSW||, CODE, READONLY, ALIGN=2

                  USBH_MSC_DecodeCSW PROC
;;;505    
;;;506    uint8_t USBH_MSC_DecodeCSW(USB_OTG_CORE_HANDLE *pdev , USBH_HOST *phost)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;507    {
000004  4605              MOV      r5,r0
000006  460f              MOV      r7,r1
;;;508      uint8_t status;
;;;509      uint32_t dataXferCount = 0;
000008  2600              MOVS     r6,#0
;;;510      status = USBH_MSC_FAIL;
00000a  2401              MOVS     r4,#1
;;;511      
;;;512      if(HCD_IsDeviceConnected(pdev))
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       HCD_IsDeviceConnected
000012  b320              CBZ      r0,|L2.94|
;;;513      {
;;;514        /*Checking if the transfer length is diffrent than 13*/
;;;515        dataXferCount = HCD_GetXferCnt(pdev, MSC_Machine.hc_num_in); 
000014  4815              LDR      r0,|L2.108|
000016  7801              LDRB     r1,[r0,#0]  ; MSC_Machine
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       HCD_GetXferCnt
00001e  4606              MOV      r6,r0
;;;516        
;;;517        if(dataXferCount != USBH_MSC_CSW_LENGTH)
000020  2e0d              CMP      r6,#0xd
000022  d001              BEQ      |L2.40|
;;;518        {
;;;519          /*(4) Hi > Dn (Host expects to receive data from the device,
;;;520          Device intends to transfer no data)
;;;521          (5) Hi > Di (Host expects to receive data from the device,
;;;522          Device intends to send data to the host)
;;;523          (9) Ho > Dn (Host expects to send data to the device,
;;;524          Device intends to transfer no data)
;;;525          (11) Ho > Do  (Host expects to send data to the device,
;;;526          Device intends to receive data from the host)*/
;;;527          
;;;528          
;;;529          status = USBH_MSC_PHASE_ERROR;
000024  2402              MOVS     r4,#2
000026  e01c              B        |L2.98|
                  |L2.40|
;;;530        }
;;;531        else
;;;532        { /* CSW length is Correct */
;;;533          
;;;534          /* Check validity of the CSW Signature and CSWStatus */
;;;535          if(USBH_MSC_CSWData.field.CSWSignature == USBH_MSC_BOT_CSW_SIGNATURE)
000028  4811              LDR      r0,|L2.112|
00002a  6800              LDR      r0,[r0,#0]  ; USBH_MSC_CSWData
00002c  4911              LDR      r1,|L2.116|
00002e  4288              CMP      r0,r1
000030  d116              BNE      |L2.96|
;;;536          {/* Check Condition 1. dCSWSignature is equal to 53425355h */
;;;537            
;;;538            if(USBH_MSC_CSWData.field.CSWTag == USBH_MSC_CBWData.field.CBWTag)
000032  480f              LDR      r0,|L2.112|
000034  6840              LDR      r0,[r0,#4]  ; USBH_MSC_CSWData
000036  4910              LDR      r1,|L2.120|
000038  6849              LDR      r1,[r1,#4]  ; USBH_MSC_CBWData
00003a  4288              CMP      r0,r1
00003c  d111              BNE      |L2.98|
;;;539            {
;;;540              /* Check Condition 3. dCSWTag matches the dCBWTag from the 
;;;541              corresponding CBW */
;;;542              
;;;543              if(USBH_MSC_CSWData.field.CSWStatus == USBH_MSC_OK) 
00003e  480c              LDR      r0,|L2.112|
000040  7b00              LDRB     r0,[r0,#0xc]  ; USBH_MSC_CSWData
000042  b908              CBNZ     r0,|L2.72|
;;;544              {
;;;545                /* Refer to USB Mass-Storage Class : BOT (www.usb.org) 
;;;546                
;;;547                Hn Host expects no data transfers
;;;548                Hi Host expects to receive data from the device
;;;549                Ho Host expects to send data to the device
;;;550                
;;;551                Dn Device intends to transfer no data
;;;552                Di Device intends to send data to the host
;;;553                Do Device intends to receive data from the host
;;;554                
;;;555                Section 6.7 
;;;556                (1) Hn = Dn (Host expects no data transfers,
;;;557                Device intends to transfer no data)
;;;558                (6) Hi = Di (Host expects to receive data from the device,
;;;559                Device intends to send data to the host)
;;;560                (12) Ho = Do (Host expects to send data to the device, 
;;;561                Device intends to receive data from the host)
;;;562                
;;;563                */
;;;564                
;;;565                status = USBH_MSC_OK;
000044  2400              MOVS     r4,#0
000046  e00c              B        |L2.98|
                  |L2.72|
;;;566              }
;;;567              else if(USBH_MSC_CSWData.field.CSWStatus == USBH_MSC_FAIL)
000048  4809              LDR      r0,|L2.112|
00004a  7b00              LDRB     r0,[r0,#0xc]  ; USBH_MSC_CSWData
00004c  2801              CMP      r0,#1
00004e  d101              BNE      |L2.84|
;;;568              {
;;;569                status = USBH_MSC_FAIL;
000050  2401              MOVS     r4,#1
000052  e006              B        |L2.98|
                  |L2.84|
;;;570              }
;;;571              
;;;572              else if(USBH_MSC_CSWData.field.CSWStatus == USBH_MSC_PHASE_ERROR)
000054  4806              LDR      r0,|L2.112|
000056  7b00              LDRB     r0,[r0,#0xc]  ; USBH_MSC_CSWData
000058  2802              CMP      r0,#2
00005a  d102              BNE      |L2.98|
;;;573              { 
;;;574                /* Refer to USB Mass-Storage Class : BOT (www.usb.org) 
;;;575                Section 6.7 
;;;576                (2) Hn < Di ( Host expects no data transfers, 
;;;577                Device intends to send data to the host)
;;;578                (3) Hn < Do ( Host expects no data transfers, 
;;;579                Device intends to receive data from the host)
;;;580                (7) Hi < Di ( Host expects to receive data from the device, 
;;;581                Device intends to send data to the host)
;;;582                (8) Hi <> Do ( Host expects to receive data from the device, 
;;;583                Device intends to receive data from the host)
;;;584                (10) Ho <> Di (Host expects to send data to the device,
;;;585                Di Device intends to send data to the host)
;;;586                (13) Ho < Do (Host expects to send data to the device, 
;;;587                Device intends to receive data from the host)
;;;588                */
;;;589                
;;;590                status = USBH_MSC_PHASE_ERROR;
00005c  2402              MOVS     r4,#2
                  |L2.94|
00005e  e000              B        |L2.98|
                  |L2.96|
;;;591              }
;;;592            } /* CSW Tag Matching is Checked  */
;;;593          } /* CSW Signature Correct Checking */
;;;594          else
;;;595          {
;;;596            /* If the CSW Signature is not valid, We sall return the Phase Error to
;;;597            Upper Layers for Reset Recovery */
;;;598            
;;;599            status = USBH_MSC_PHASE_ERROR;
000060  2402              MOVS     r4,#2
                  |L2.98|
;;;600          }
;;;601        } /* CSW Length Check*/
;;;602      }
;;;603      
;;;604      USBH_MSC_BOTXferParam.BOTXferStatus  = status;
000062  4806              LDR      r0,|L2.124|
000064  73c4              STRB     r4,[r0,#0xf]
;;;605      return status;
000066  4620              MOV      r0,r4
;;;606    }
000068  e8bd81f0          POP      {r4-r8,pc}
;;;607    
                          ENDP

                  |L2.108|
                          DCD      MSC_Machine
                  |L2.112|
                          DCD      USBH_MSC_CSWData
                  |L2.116|
                          DCD      0x53425355
                  |L2.120|
                          DCD      USBH_MSC_CBWData
                  |L2.124|
                          DCD      USBH_MSC_BOTXferParam

                          AREA ||i.USBH_MSC_HandleBOTXfer||, CODE, READONLY, ALIGN=2

                  USBH_MSC_HandleBOTXfer PROC
;;;152    */
;;;153    void USBH_MSC_HandleBOTXfer (USB_OTG_CORE_HANDLE *pdev ,USBH_HOST *phost)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;154    {
000004  4680              MOV      r8,r0
000006  4689              MOV      r9,r1
;;;155      uint8_t xferDirection, index;
;;;156      static uint32_t remainingDataLength;
;;;157      static uint8_t *datapointer , *datapointer_prev;
;;;158      static uint8_t error_direction;
;;;159      USBH_Status status;
;;;160      
;;;161      URB_STATE URB_Status = URB_IDLE;
000008  2400              MOVS     r4,#0
;;;162      
;;;163      if(HCD_IsDeviceConnected(pdev))
00000a  4640              MOV      r0,r8
00000c  f7fffffe          BL       HCD_IsDeviceConnected
000010  2800              CMP      r0,#0
000012  d07d              BEQ      |L3.272|
;;;164      {  
;;;165        
;;;166        switch (USBH_MSC_BOTXferParam.BOTState)
000014  48c5              LDR      r0,|L3.812|
000016  7900              LDRB     r0,[r0,#4]  ; USBH_MSC_BOTXferParam
000018  2809              CMP      r0,#9
00001a  d27a              BCS      |L3.274|
00001c  e8dff000          TBB      [pc,r0]
000020  79051251          DCB      0x79,0x05,0x12,0x51
000024  a3fdfcfb          DCB      0xa3,0xfd,0xfc,0xfb
000028  fa00              DCB      0xfa,0x00
;;;167        {
;;;168        case USBH_MSC_SEND_CBW:
;;;169          /* send CBW */    
;;;170          USBH_BulkSendData (pdev,
00002a  48c1              LDR      r0,|L3.816|
00002c  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
00002e  221f              MOVS     r2,#0x1f
000030  49c0              LDR      r1,|L3.820|
000032  4640              MOV      r0,r8
000034  f7fffffe          BL       USBH_BulkSendData
;;;171                             &USBH_MSC_CBWData.CBWArray[0], 
;;;172                             USBH_MSC_BOT_CBW_PACKET_LENGTH , 
;;;173                             MSC_Machine.hc_num_out);
;;;174          
;;;175          USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_SEND_CBW;
000038  2001              MOVS     r0,#1
00003a  49bc              LDR      r1,|L3.812|
00003c  7148              STRB     r0,[r1,#5]
;;;176          USBH_MSC_BOTXferParam.BOTState = USBH_MSC_SENT_CBW;
00003e  2002              MOVS     r0,#2
000040  7108              STRB     r0,[r1,#4]
;;;177          
;;;178          break;
000042  e170              B        |L3.806|
;;;179          
;;;180        case USBH_MSC_SENT_CBW:
;;;181          URB_Status = HCD_GetURB_State(pdev , MSC_Machine.hc_num_out);
000044  48ba              LDR      r0,|L3.816|
000046  7841              LDRB     r1,[r0,#1]  ; MSC_Machine
000048  4640              MOV      r0,r8
00004a  f7fffffe          BL       HCD_GetURB_State
00004e  4604              MOV      r4,r0
;;;182          
;;;183          if(URB_Status == URB_DONE)
000050  2c01              CMP      r4,#1
000052  d126              BNE      |L3.162|
;;;184          { 
;;;185            BOTStallErrorCount = 0;
000054  2000              MOVS     r0,#0
000056  49b8              LDR      r1,|L3.824|
000058  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;186            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_SENT_CBW; 
00005a  2002              MOVS     r0,#2
00005c  49b3              LDR      r1,|L3.812|
00005e  7148              STRB     r0,[r1,#5]
;;;187            
;;;188            /* If the CBW Pkt is sent successful, then change the state */
;;;189            xferDirection = (USBH_MSC_CBWData.field.CBWFlags & USB_REQ_DIR_MASK);
000060  48b4              LDR      r0,|L3.820|
000062  7b00              LDRB     r0,[r0,#0xc]  ; USBH_MSC_CBWData
000064  f0000780          AND      r7,r0,#0x80
;;;190            
;;;191            if ( USBH_MSC_CBWData.field.CBWTransferLength != 0 )
000068  48b2              LDR      r0,|L3.820|
00006a  6880              LDR      r0,[r0,#8]  ; USBH_MSC_CBWData
00006c  b1a8              CBZ      r0,|L3.154|
;;;192            {
;;;193              remainingDataLength = USBH_MSC_CBWData.field.CBWTransferLength ;
00006e  48b1              LDR      r0,|L3.820|
000070  6880              LDR      r0,[r0,#8]  ; USBH_MSC_CBWData
000072  49b2              LDR      r1,|L3.828|
000074  6008              STR      r0,[r1,#0]  ; remainingDataLength
;;;194              datapointer = USBH_MSC_BOTXferParam.pRxTxBuff;
000076  48ad              LDR      r0,|L3.812|
000078  6880              LDR      r0,[r0,#8]  ; USBH_MSC_BOTXferParam
00007a  49b1              LDR      r1,|L3.832|
00007c  6008              STR      r0,[r1,#0]  ; datapointer
;;;195              datapointer_prev = datapointer;
00007e  4608              MOV      r0,r1
000080  6800              LDR      r0,[r0,#0]  ; datapointer
000082  49b0              LDR      r1,|L3.836|
000084  6008              STR      r0,[r1,#0]  ; datapointer_prev
;;;196              
;;;197              /* If there is Data Transfer Stage */
;;;198              if (xferDirection == USB_D2H)
000086  2f80              CMP      r7,#0x80
000088  d103              BNE      |L3.146|
;;;199              {
;;;200                /* Data Direction is IN */
;;;201                USBH_MSC_BOTXferParam.BOTState = USBH_MSC_BOT_DATAIN_STATE;
00008a  2003              MOVS     r0,#3
00008c  49a7              LDR      r1,|L3.812|
00008e  7108              STRB     r0,[r1,#4]
000090  e016              B        |L3.192|
                  |L3.146|
;;;202              }
;;;203              else
;;;204              {
;;;205                /* Data Direction is OUT */
;;;206                USBH_MSC_BOTXferParam.BOTState = USBH_MSC_BOT_DATAOUT_STATE;
000092  2004              MOVS     r0,#4
000094  49a5              LDR      r1,|L3.812|
000096  7108              STRB     r0,[r1,#4]
000098  e012              B        |L3.192|
                  |L3.154|
;;;207              } 
;;;208            }
;;;209            
;;;210            else
;;;211            {/* If there is NO Data Transfer Stage */
;;;212              USBH_MSC_BOTXferParam.BOTState = USBH_MSC_RECEIVE_CSW_STATE;
00009a  2005              MOVS     r0,#5
00009c  49a3              LDR      r1,|L3.812|
00009e  7108              STRB     r0,[r1,#4]
0000a0  e00e              B        |L3.192|
                  |L3.162|
;;;213            }
;;;214            
;;;215          }   
;;;216          else if(URB_Status == URB_NOTREADY)
0000a2  2c02              CMP      r4,#2
0000a4  d104              BNE      |L3.176|
;;;217          {
;;;218            USBH_MSC_BOTXferParam.BOTState  = USBH_MSC_BOTXferParam.BOTStateBkp;    
0000a6  48a1              LDR      r0,|L3.812|
0000a8  7940              LDRB     r0,[r0,#5]  ; USBH_MSC_BOTXferParam
0000aa  49a0              LDR      r1,|L3.812|
0000ac  7108              STRB     r0,[r1,#4]
0000ae  e007              B        |L3.192|
                  |L3.176|
;;;219          }     
;;;220          else if(URB_Status == URB_STALL)
0000b0  2c04              CMP      r4,#4
0000b2  d105              BNE      |L3.192|
;;;221          {
;;;222            error_direction = USBH_MSC_DIR_OUT;
0000b4  2001              MOVS     r0,#1
0000b6  49a4              LDR      r1,|L3.840|
0000b8  7008              STRB     r0,[r1,#0]
;;;223            USBH_MSC_BOTXferParam.BOTState  = USBH_MSC_BOT_ERROR_OUT;
0000ba  2008              MOVS     r0,#8
0000bc  499b              LDR      r1,|L3.812|
0000be  7108              STRB     r0,[r1,#4]
                  |L3.192|
;;;224          }
;;;225          break;
0000c0  e131              B        |L3.806|
;;;226          
;;;227        case USBH_MSC_BOT_DATAIN_STATE:
;;;228          
;;;229          URB_Status =   HCD_GetURB_State(pdev , MSC_Machine.hc_num_in);
0000c2  489b              LDR      r0,|L3.816|
0000c4  7801              LDRB     r1,[r0,#0]  ; MSC_Machine
0000c6  4640              MOV      r0,r8
0000c8  f7fffffe          BL       HCD_GetURB_State
0000cc  4604              MOV      r4,r0
;;;230          /* BOT DATA IN stage */
;;;231          if((URB_Status == URB_DONE) ||(USBH_MSC_BOTXferParam.BOTStateBkp != USBH_MSC_BOT_DATAIN_STATE))
0000ce  2c01              CMP      r4,#1
0000d0  d003              BEQ      |L3.218|
0000d2  4896              LDR      r0,|L3.812|
0000d4  7940              LDRB     r0,[r0,#5]  ; USBH_MSC_BOTXferParam
0000d6  2803              CMP      r0,#3
0000d8  d03a              BEQ      |L3.336|
                  |L3.218|
;;;232          {
;;;233            BOTStallErrorCount = 0;
0000da  2000              MOVS     r0,#0
0000dc  4996              LDR      r1,|L3.824|
0000de  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;234            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_BOT_DATAIN_STATE;    
0000e0  2003              MOVS     r0,#3
0000e2  4992              LDR      r1,|L3.812|
0000e4  7148              STRB     r0,[r1,#5]
;;;235            
;;;236            if(remainingDataLength > MSC_Machine.MSBulkInEpSize)
0000e6  4892              LDR      r0,|L3.816|
0000e8  8880              LDRH     r0,[r0,#4]  ; MSC_Machine
0000ea  4994              LDR      r1,|L3.828|
0000ec  6809              LDR      r1,[r1,#0]  ; remainingDataLength
0000ee  4288              CMP      r0,r1
0000f0  d219              BCS      |L3.294|
;;;237            {
;;;238              USBH_BulkReceiveData (pdev,
0000f2  488f              LDR      r0,|L3.816|
0000f4  7803              LDRB     r3,[r0,#0]  ; MSC_Machine
0000f6  8882              LDRH     r2,[r0,#4]  ; MSC_Machine
0000f8  4891              LDR      r0,|L3.832|
0000fa  6801              LDR      r1,[r0,#0]  ; datapointer
0000fc  4640              MOV      r0,r8
0000fe  f7fffffe          BL       USBH_BulkReceiveData
;;;239    	                        datapointer, 
;;;240    			        MSC_Machine.MSBulkInEpSize , 
;;;241    			        MSC_Machine.hc_num_in);
;;;242              
;;;243              remainingDataLength -= MSC_Machine.MSBulkInEpSize;
000102  488b              LDR      r0,|L3.816|
000104  8880              LDRH     r0,[r0,#4]  ; MSC_Machine
000106  498d              LDR      r1,|L3.828|
000108  6809              LDR      r1,[r1,#0]  ; remainingDataLength
00010a  1a08              SUBS     r0,r1,r0
00010c  498b              LDR      r1,|L3.828|
00010e  e001              B        |L3.276|
                  |L3.272|
000110  e10a              B        |L3.808|
                  |L3.274|
000112  e107              B        |L3.804|
                  |L3.276|
000114  6008              STR      r0,[r1,#0]  ; remainingDataLength
;;;244              datapointer = datapointer + MSC_Machine.MSBulkInEpSize;
000116  4886              LDR      r0,|L3.816|
000118  8880              LDRH     r0,[r0,#4]  ; MSC_Machine
00011a  4989              LDR      r1,|L3.832|
00011c  6809              LDR      r1,[r1,#0]  ; datapointer
00011e  4408              ADD      r0,r0,r1
000120  4987              LDR      r1,|L3.832|
000122  6008              STR      r0,[r1,#0]  ; datapointer
000124  e01e              B        |L3.356|
                  |L3.294|
;;;245            }
;;;246            else if ( remainingDataLength == 0)
000126  4885              LDR      r0,|L3.828|
000128  6800              LDR      r0,[r0,#0]  ; remainingDataLength
00012a  b918              CBNZ     r0,|L3.308|
;;;247            {
;;;248              /* If value was 0, and successful transfer, then change the state */
;;;249              USBH_MSC_BOTXferParam.BOTState = USBH_MSC_RECEIVE_CSW_STATE;
00012c  2005              MOVS     r0,#5
00012e  497f              LDR      r1,|L3.812|
000130  7108              STRB     r0,[r1,#4]
000132  e017              B        |L3.356|
                  |L3.308|
;;;250            }
;;;251            else
;;;252            {       
;;;253              USBH_BulkReceiveData (pdev,
000134  487e              LDR      r0,|L3.816|
000136  7803              LDRB     r3,[r0,#0]  ; MSC_Machine
000138  4880              LDR      r0,|L3.828|
00013a  8800              LDRH     r0,[r0,#0]  ; remainingDataLength
00013c  b282              UXTH     r2,r0
00013e  4880              LDR      r0,|L3.832|
000140  6801              LDR      r1,[r0,#0]  ; datapointer
000142  4640              MOV      r0,r8
000144  f7fffffe          BL       USBH_BulkReceiveData
;;;254    	                        datapointer, 
;;;255    			        remainingDataLength , 
;;;256    			        MSC_Machine.hc_num_in);
;;;257              
;;;258              remainingDataLength = 0; /* Reset this value and keep in same state */
000148  2000              MOVS     r0,#0
00014a  497c              LDR      r1,|L3.828|
00014c  6008              STR      r0,[r1,#0]  ; remainingDataLength
00014e  e009              B        |L3.356|
                  |L3.336|
;;;259            }
;;;260          }
;;;261          else if(URB_Status == URB_STALL)
000150  2c04              CMP      r4,#4
000152  d107              BNE      |L3.356|
;;;262          {
;;;263            /* This is Data Stage STALL Condition */
;;;264            
;;;265            error_direction = USBH_MSC_DIR_IN;
000154  2000              MOVS     r0,#0
000156  497c              LDR      r1,|L3.840|
000158  7008              STRB     r0,[r1,#0]
;;;266            USBH_MSC_BOTXferParam.BOTState  = USBH_MSC_BOT_ERROR_IN;
00015a  2007              MOVS     r0,#7
00015c  4973              LDR      r1,|L3.812|
00015e  7108              STRB     r0,[r1,#4]
;;;267            
;;;268            /* Refer to USB Mass-Storage Class : BOT (www.usb.org) 
;;;269            6.7.2 Host expects to receive data from the device
;;;270            3. On a STALL condition receiving data, then:
;;;271            The host shall accept the data received.
;;;272            The host shall clear the Bulk-In pipe.
;;;273            4. The host shall attempt to receive a CSW.
;;;274            
;;;275            USBH_MSC_BOTXferParam.BOTStateBkp is used to switch to the Original 
;;;276            state after the ClearFeature Command is issued.
;;;277            */
;;;278            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_RECEIVE_CSW_STATE;
000160  2005              MOVS     r0,#5
000162  7148              STRB     r0,[r1,#5]
                  |L3.356|
;;;279            
;;;280          }     
;;;281          break;   
000164  e0df              B        |L3.806|
;;;282          
;;;283          
;;;284        case USBH_MSC_BOT_DATAOUT_STATE:
;;;285          /* BOT DATA OUT stage */
;;;286          URB_Status = HCD_GetURB_State(pdev , MSC_Machine.hc_num_out);       
000166  4872              LDR      r0,|L3.816|
000168  7841              LDRB     r1,[r0,#1]  ; MSC_Machine
00016a  4640              MOV      r0,r8
00016c  f7fffffe          BL       HCD_GetURB_State
000170  4604              MOV      r4,r0
;;;287          if(URB_Status == URB_DONE)
000172  2c01              CMP      r4,#1
000174  d13b              BNE      |L3.494|
;;;288          {
;;;289            BOTStallErrorCount = 0;
000176  2000              MOVS     r0,#0
000178  496f              LDR      r1,|L3.824|
00017a  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;290            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_BOT_DATAOUT_STATE;    
00017c  2004              MOVS     r0,#4
00017e  496b              LDR      r1,|L3.812|
000180  7148              STRB     r0,[r1,#5]
;;;291            if(remainingDataLength > MSC_Machine.MSBulkOutEpSize)
000182  486b              LDR      r0,|L3.816|
000184  88c0              LDRH     r0,[r0,#6]  ; MSC_Machine
000186  496d              LDR      r1,|L3.828|
000188  6809              LDR      r1,[r1,#0]  ; remainingDataLength
00018a  4288              CMP      r0,r1
00018c  d21a              BCS      |L3.452|
;;;292            {
;;;293              USBH_BulkSendData (pdev,
00018e  4868              LDR      r0,|L3.816|
000190  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
000192  88c2              LDRH     r2,[r0,#6]  ; MSC_Machine
000194  486a              LDR      r0,|L3.832|
000196  6801              LDR      r1,[r0,#0]  ; datapointer
000198  4640              MOV      r0,r8
00019a  f7fffffe          BL       USBH_BulkSendData
;;;294                                 datapointer, 
;;;295                                 MSC_Machine.MSBulkOutEpSize , 
;;;296                                 MSC_Machine.hc_num_out);
;;;297              datapointer_prev = datapointer;
00019e  4868              LDR      r0,|L3.832|
0001a0  6800              LDR      r0,[r0,#0]  ; datapointer
0001a2  4968              LDR      r1,|L3.836|
0001a4  6008              STR      r0,[r1,#0]  ; datapointer_prev
;;;298              datapointer = datapointer + MSC_Machine.MSBulkOutEpSize;
0001a6  4862              LDR      r0,|L3.816|
0001a8  88c0              LDRH     r0,[r0,#6]  ; MSC_Machine
0001aa  4965              LDR      r1,|L3.832|
0001ac  6809              LDR      r1,[r1,#0]  ; datapointer
0001ae  4408              ADD      r0,r0,r1
0001b0  4963              LDR      r1,|L3.832|
0001b2  6008              STR      r0,[r1,#0]  ; datapointer
;;;299              
;;;300              remainingDataLength = remainingDataLength - MSC_Machine.MSBulkOutEpSize;
0001b4  485e              LDR      r0,|L3.816|
0001b6  88c0              LDRH     r0,[r0,#6]  ; MSC_Machine
0001b8  4960              LDR      r1,|L3.828|
0001ba  6809              LDR      r1,[r1,#0]  ; remainingDataLength
0001bc  1a08              SUBS     r0,r1,r0
0001be  495f              LDR      r1,|L3.828|
0001c0  6008              STR      r0,[r1,#0]  ; remainingDataLength
0001c2  e042              B        |L3.586|
                  |L3.452|
;;;301            }
;;;302            else if ( remainingDataLength == 0)
0001c4  485d              LDR      r0,|L3.828|
0001c6  6800              LDR      r0,[r0,#0]  ; remainingDataLength
0001c8  b918              CBNZ     r0,|L3.466|
;;;303            {
;;;304              /* If value was 0, and successful transfer, then change the state */
;;;305              USBH_MSC_BOTXferParam.BOTState = USBH_MSC_RECEIVE_CSW_STATE;
0001ca  2005              MOVS     r0,#5
0001cc  4957              LDR      r1,|L3.812|
0001ce  7108              STRB     r0,[r1,#4]
0001d0  e03b              B        |L3.586|
                  |L3.466|
;;;306            }
;;;307            else
;;;308            {
;;;309              USBH_BulkSendData (pdev,
0001d2  4857              LDR      r0,|L3.816|
0001d4  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
0001d6  4859              LDR      r0,|L3.828|
0001d8  8800              LDRH     r0,[r0,#0]  ; remainingDataLength
0001da  b282              UXTH     r2,r0
0001dc  4858              LDR      r0,|L3.832|
0001de  6801              LDR      r1,[r0,#0]  ; datapointer
0001e0  4640              MOV      r0,r8
0001e2  f7fffffe          BL       USBH_BulkSendData
;;;310    	                     datapointer, 
;;;311    			     remainingDataLength , 
;;;312    			     MSC_Machine.hc_num_out);
;;;313              
;;;314              remainingDataLength = 0; /* Reset this value and keep in same state */   
0001e6  2000              MOVS     r0,#0
0001e8  4954              LDR      r1,|L3.828|
0001ea  6008              STR      r0,[r1,#0]  ; remainingDataLength
0001ec  e02d              B        |L3.586|
                  |L3.494|
;;;315            }      
;;;316          }
;;;317          
;;;318          else if(URB_Status == URB_NOTREADY)
0001ee  2c02              CMP      r4,#2
0001f0  d121              BNE      |L3.566|
;;;319          {
;;;320            if(datapointer != datapointer_prev)
0001f2  4853              LDR      r0,|L3.832|
0001f4  6800              LDR      r0,[r0,#0]  ; datapointer
0001f6  4953              LDR      r1,|L3.836|
0001f8  6809              LDR      r1,[r1,#0]  ; datapointer_prev
0001fa  4288              CMP      r0,r1
0001fc  d012              BEQ      |L3.548|
;;;321            {
;;;322              USBH_BulkSendData (pdev,
0001fe  484c              LDR      r0,|L3.816|
000200  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
000202  88c2              LDRH     r2,[r0,#6]  ; MSC_Machine
000204  88c0              LDRH     r0,[r0,#6]  ; MSC_Machine
000206  f8dfc138          LDR      r12,|L3.832|
00020a  f8dcc000          LDR      r12,[r12,#0]  ; datapointer
00020e  ebac0100          SUB      r1,r12,r0
000212  e003              B        |L3.540|
000214  e074              B        |L3.768|
000216  e059              B        |L3.716|
000218  e037              B        |L3.650|
00021a  e017              B        |L3.588|
                  |L3.540|
00021c  4640              MOV      r0,r8
00021e  f7fffffe          BL       USBH_BulkSendData
000222  e012              B        |L3.586|
                  |L3.548|
;;;323                                 (datapointer - MSC_Machine.MSBulkOutEpSize), 
;;;324                                 MSC_Machine.MSBulkOutEpSize , 
;;;325                                 MSC_Machine.hc_num_out);
;;;326            }
;;;327            else
;;;328            {
;;;329              USBH_BulkSendData (pdev,
000224  4842              LDR      r0,|L3.816|
000226  7843              LDRB     r3,[r0,#1]  ; MSC_Machine
000228  88c2              LDRH     r2,[r0,#6]  ; MSC_Machine
00022a  4845              LDR      r0,|L3.832|
00022c  6801              LDR      r1,[r0,#0]  ; datapointer
00022e  4640              MOV      r0,r8
000230  f7fffffe          BL       USBH_BulkSendData
000234  e009              B        |L3.586|
                  |L3.566|
;;;330                                 datapointer,
;;;331                                 MSC_Machine.MSBulkOutEpSize , 
;;;332                                 MSC_Machine.hc_num_out);
;;;333            }
;;;334          }
;;;335          
;;;336          else if(URB_Status == URB_STALL)
000236  2c04              CMP      r4,#4
000238  d107              BNE      |L3.586|
;;;337          {
;;;338            error_direction = USBH_MSC_DIR_OUT;
00023a  2001              MOVS     r0,#1
00023c  4942              LDR      r1,|L3.840|
00023e  7008              STRB     r0,[r1,#0]
;;;339            USBH_MSC_BOTXferParam.BOTState  = USBH_MSC_BOT_ERROR_OUT;
000240  2008              MOVS     r0,#8
000242  493a              LDR      r1,|L3.812|
000244  7108              STRB     r0,[r1,#4]
;;;340            
;;;341            /* Refer to USB Mass-Storage Class : BOT (www.usb.org) 
;;;342            6.7.3 Ho - Host expects to send data to the device
;;;343            3. On a STALL condition sending data, then:
;;;344            " The host shall clear the Bulk-Out pipe.
;;;345            4. The host shall attempt to receive a CSW.
;;;346            
;;;347            The Above statement will do the clear the Bulk-Out pipe.
;;;348            The Below statement will help in Getting the CSW.  
;;;349            
;;;350            USBH_MSC_BOTXferParam.BOTStateBkp is used to switch to the Original 
;;;351            state after the ClearFeature Command is issued.
;;;352            */
;;;353            
;;;354            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_RECEIVE_CSW_STATE;
000246  2005              MOVS     r0,#5
000248  7148              STRB     r0,[r1,#5]
                  |L3.586|
;;;355            
;;;356          }
;;;357          break;
00024a  e06c              B        |L3.806|
                  |L3.588|
;;;358          
;;;359        case USBH_MSC_RECEIVE_CSW_STATE:
;;;360          /* BOT CSW stage */     
;;;361            /* NOTE: We cannot reset the BOTStallErrorCount here as it may come from 
;;;362            the clearFeature from previous command */
;;;363            
;;;364            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_RECEIVE_CSW_STATE;
00024c  2005              MOVS     r0,#5
00024e  4937              LDR      r1,|L3.812|
000250  7148              STRB     r0,[r1,#5]
;;;365            
;;;366            USBH_MSC_BOTXferParam.pRxTxBuff = USBH_MSC_CSWData.CSWArray;
000252  483e              LDR      r0,|L3.844|
000254  6088              STR      r0,[r1,#8]  ; USBH_MSC_BOTXferParam
;;;367            USBH_MSC_BOTXferParam.DataLength = USBH_MSC_CSW_MAX_LENGTH;
000256  203f              MOVS     r0,#0x3f
000258  8188              STRH     r0,[r1,#0xc]
;;;368            
;;;369            for(index = USBH_MSC_CSW_LENGTH; index != 0; index--)
00025a  260d              MOVS     r6,#0xd
00025c  e004              B        |L3.616|
                  |L3.606|
;;;370            {
;;;371              USBH_MSC_CSWData.CSWArray[index] = 0;
00025e  2000              MOVS     r0,#0
000260  493a              LDR      r1,|L3.844|
000262  5588              STRB     r0,[r1,r6]
000264  1e70              SUBS     r0,r6,#1              ;369
000266  b2c6              UXTB     r6,r0                 ;369
                  |L3.616|
000268  2e00              CMP      r6,#0                 ;369
00026a  d1f8              BNE      |L3.606|
;;;372            }
;;;373            
;;;374            USBH_MSC_CSWData.CSWArray[0] = 0;
00026c  2000              MOVS     r0,#0
00026e  4937              LDR      r1,|L3.844|
000270  7008              STRB     r0,[r1,#0]
;;;375            
;;;376            USBH_BulkReceiveData (pdev,
000272  482f              LDR      r0,|L3.816|
000274  7803              LDRB     r3,[r0,#0]  ; MSC_Machine
000276  482d              LDR      r0,|L3.812|
000278  223f              MOVS     r2,#0x3f
00027a  6881              LDR      r1,[r0,#8]  ; USBH_MSC_BOTXferParam
00027c  4640              MOV      r0,r8
00027e  f7fffffe          BL       USBH_BulkReceiveData
;;;377                                  USBH_MSC_BOTXferParam.pRxTxBuff, 
;;;378                                  USBH_MSC_CSW_MAX_LENGTH , 
;;;379                                  MSC_Machine.hc_num_in);
;;;380            USBH_MSC_BOTXferParam.BOTState = USBH_MSC_DECODE_CSW;    
000282  2006              MOVS     r0,#6
000284  4929              LDR      r1,|L3.812|
000286  7108              STRB     r0,[r1,#4]
;;;381    
;;;382          break;
000288  e04d              B        |L3.806|
                  |L3.650|
;;;383          
;;;384        case USBH_MSC_DECODE_CSW:
;;;385          URB_Status = HCD_GetURB_State(pdev , MSC_Machine.hc_num_in);
00028a  4829              LDR      r0,|L3.816|
00028c  7801              LDRB     r1,[r0,#0]  ; MSC_Machine
00028e  4640              MOV      r0,r8
000290  f7fffffe          BL       HCD_GetURB_State
000294  4604              MOV      r4,r0
;;;386          /* Decode CSW */
;;;387          if(URB_Status == URB_DONE)
000296  2c01              CMP      r4,#1
000298  d10f              BNE      |L3.698|
;;;388          {
;;;389            BOTStallErrorCount = 0;
00029a  2000              MOVS     r0,#0
00029c  4926              LDR      r1,|L3.824|
00029e  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;390            USBH_MSC_BOTXferParam.BOTStateBkp = USBH_MSC_RECEIVE_CSW_STATE;
0002a0  2005              MOVS     r0,#5
0002a2  4922              LDR      r1,|L3.812|
0002a4  7148              STRB     r0,[r1,#5]
;;;391            
;;;392            USBH_MSC_BOTXferParam.MSCState = USBH_MSC_BOTXferParam.MSCStateCurrent ;
0002a6  4608              MOV      r0,r1
0002a8  7880              LDRB     r0,[r0,#2]  ; USBH_MSC_BOTXferParam
0002aa  7008              STRB     r0,[r1,#0]
;;;393            
;;;394            USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_DecodeCSW(pdev , phost);
0002ac  4649              MOV      r1,r9
0002ae  4640              MOV      r0,r8
0002b0  f7fffffe          BL       USBH_MSC_DecodeCSW
0002b4  491d              LDR      r1,|L3.812|
0002b6  73c8              STRB     r0,[r1,#0xf]
0002b8  e007              B        |L3.714|
                  |L3.698|
;;;395          }
;;;396          else if(URB_Status == URB_STALL)     
0002ba  2c04              CMP      r4,#4
0002bc  d105              BNE      |L3.714|
;;;397          {
;;;398            error_direction = USBH_MSC_DIR_IN;
0002be  2000              MOVS     r0,#0
0002c0  4921              LDR      r1,|L3.840|
0002c2  7008              STRB     r0,[r1,#0]
;;;399            USBH_MSC_BOTXferParam.BOTState  = USBH_MSC_BOT_ERROR_IN;
0002c4  2007              MOVS     r0,#7
0002c6  4919              LDR      r1,|L3.812|
0002c8  7108              STRB     r0,[r1,#4]
                  |L3.714|
;;;400          }
;;;401          break;
0002ca  e02c              B        |L3.806|
                  |L3.716|
;;;402          
;;;403        case USBH_MSC_BOT_ERROR_IN: 
;;;404          status = USBH_MSC_BOT_Abort(pdev, phost, USBH_MSC_DIR_IN);
0002cc  2200              MOVS     r2,#0
0002ce  4649              MOV      r1,r9
0002d0  4640              MOV      r0,r8
0002d2  f7fffffe          BL       USBH_MSC_BOT_Abort
0002d6  4605              MOV      r5,r0
;;;405          if (status == USBH_OK)
0002d8  b965              CBNZ     r5,|L3.756|
;;;406          {
;;;407            /* Check if the error was due in Both the directions */
;;;408            if (error_direction == USBH_MSC_BOTH_DIR)
0002da  481b              LDR      r0,|L3.840|
0002dc  7800              LDRB     r0,[r0,#0]  ; error_direction
0002de  2802              CMP      r0,#2
0002e0  d103              BNE      |L3.746|
;;;409            {/* If Both directions are Needed, Switch to OUT Direction */
;;;410              USBH_MSC_BOTXferParam.BOTState = USBH_MSC_BOT_ERROR_OUT;
0002e2  2008              MOVS     r0,#8
0002e4  4911              LDR      r1,|L3.812|
0002e6  7108              STRB     r0,[r1,#4]
0002e8  e009              B        |L3.766|
                  |L3.746|
;;;411            }
;;;412            else
;;;413            {
;;;414              /* Switch Back to the Original State, In many cases this will be 
;;;415              USBH_MSC_RECEIVE_CSW_STATE state */
;;;416              USBH_MSC_BOTXferParam.BOTState = USBH_MSC_BOTXferParam.BOTStateBkp;
0002ea  4810              LDR      r0,|L3.812|
0002ec  7940              LDRB     r0,[r0,#5]  ; USBH_MSC_BOTXferParam
0002ee  490f              LDR      r1,|L3.812|
0002f0  7108              STRB     r0,[r1,#4]
0002f2  e004              B        |L3.766|
                  |L3.756|
;;;417            }
;;;418          }
;;;419          else if (status == USBH_UNRECOVERED_ERROR)
0002f4  2d04              CMP      r5,#4
0002f6  d102              BNE      |L3.766|
;;;420          {
;;;421            /* This means that there is a STALL Error limit, Do Reset Recovery */
;;;422            USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_PHASE_ERROR;
0002f8  2002              MOVS     r0,#2
0002fa  490c              LDR      r1,|L3.812|
0002fc  73c8              STRB     r0,[r1,#0xf]
                  |L3.766|
;;;423          }
;;;424          break;
0002fe  e012              B        |L3.806|
                  |L3.768|
;;;425          
;;;426        case USBH_MSC_BOT_ERROR_OUT: 
;;;427          status = USBH_MSC_BOT_Abort(pdev, phost, USBH_MSC_DIR_OUT);
000300  2201              MOVS     r2,#1
000302  4649              MOV      r1,r9
000304  4640              MOV      r0,r8
000306  f7fffffe          BL       USBH_MSC_BOT_Abort
00030a  4605              MOV      r5,r0
;;;428          if ( status == USBH_OK)
00030c  b925              CBNZ     r5,|L3.792|
;;;429          { /* Switch Back to the Original State */
;;;430            USBH_MSC_BOTXferParam.BOTState = USBH_MSC_BOTXferParam.BOTStateBkp;        
00030e  4807              LDR      r0,|L3.812|
000310  7940              LDRB     r0,[r0,#5]  ; USBH_MSC_BOTXferParam
000312  4906              LDR      r1,|L3.812|
000314  7108              STRB     r0,[r1,#4]
000316  e004              B        |L3.802|
                  |L3.792|
;;;431          }
;;;432          else if (status == USBH_UNRECOVERED_ERROR)
000318  2d04              CMP      r5,#4
00031a  d102              BNE      |L3.802|
;;;433          {
;;;434            /* This means that there is a STALL Error limit, Do Reset Recovery */
;;;435            USBH_MSC_BOTXferParam.BOTXferStatus = USBH_MSC_PHASE_ERROR;
00031c  2002              MOVS     r0,#2
00031e  4903              LDR      r1,|L3.812|
000320  73c8              STRB     r0,[r1,#0xf]
                  |L3.802|
;;;436          }
;;;437          break;
000322  e000              B        |L3.806|
                  |L3.804|
;;;438          
;;;439        default:      
;;;440          break;
000324  bf00              NOP      
                  |L3.806|
000326  bf00              NOP                            ;178
                  |L3.808|
;;;441        }
;;;442      }
;;;443    }
000328  e8bd87f0          POP      {r4-r10,pc}
;;;444    
                          ENDP

                  |L3.812|
                          DCD      USBH_MSC_BOTXferParam
                  |L3.816|
                          DCD      MSC_Machine
                  |L3.820|
                          DCD      USBH_MSC_CBWData
                  |L3.824|
                          DCD      BOTStallErrorCount
                  |L3.828|
                          DCD      remainingDataLength
                  |L3.832|
                          DCD      datapointer
                  |L3.836|
                          DCD      datapointer_prev
                  |L3.840|
                          DCD      error_direction
                  |L3.844|
                          DCD      USBH_MSC_CSWData

                          AREA ||i.USBH_MSC_Init||, CODE, READONLY, ALIGN=2

                  USBH_MSC_Init PROC
;;;130    */
;;;131    void USBH_MSC_Init(USB_OTG_CORE_HANDLE *pdev )
000000  b510              PUSH     {r4,lr}
;;;132    {
000002  4604              MOV      r4,r0
;;;133      if(HCD_IsDeviceConnected(pdev))
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       HCD_IsDeviceConnected
00000a  b148              CBZ      r0,|L4.32|
;;;134      {      
;;;135        USBH_MSC_CBWData.field.CBWSignature = USBH_MSC_BOT_CBW_SIGNATURE;
00000c  4807              LDR      r0,|L4.44|
00000e  4908              LDR      r1,|L4.48|
000010  6008              STR      r0,[r1,#0]  ; USBH_MSC_CBWData
;;;136        USBH_MSC_CBWData.field.CBWTag = USBH_MSC_BOT_CBW_TAG;
000012  4808              LDR      r0,|L4.52|
000014  6048              STR      r0,[r1,#4]  ; USBH_MSC_CBWData
;;;137        USBH_MSC_CBWData.field.CBWLUN = 0;  /*Only one LUN is supported*/
000016  2000              MOVS     r0,#0
000018  7348              STRB     r0,[r1,#0xd]
;;;138        USBH_MSC_BOTXferParam.CmdStateMachine = CMD_SEND_STATE;  
00001a  2001              MOVS     r0,#1
00001c  4906              LDR      r1,|L4.56|
00001e  70c8              STRB     r0,[r1,#3]
                  |L4.32|
;;;139      }
;;;140      
;;;141      BOTStallErrorCount = 0;
000020  2000              MOVS     r0,#0
000022  4906              LDR      r1,|L4.60|
000024  6008              STR      r0,[r1,#0]  ; BOTStallErrorCount
;;;142      MSCErrorCount = 0;
000026  4906              LDR      r1,|L4.64|
000028  7008              STRB     r0,[r1,#0]
;;;143    }
00002a  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  |L4.44|
                          DCD      0x43425355
                  |L4.48|
                          DCD      USBH_MSC_CBWData
                  |L4.52|
                          DCD      0x20304050
                  |L4.56|
                          DCD      USBH_MSC_BOTXferParam
                  |L4.60|
                          DCD      BOTStallErrorCount
                  |L4.64|
                          DCD      MSCErrorCount

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  USBH_MSC_CBWData
                          %        32
                  USBH_MSC_CSWData
                          %        16
                  USBH_MSC_BOTXferParam
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  BOTStallErrorCount
                          DCD      0x00000000
                  remainingDataLength
                          DCD      0x00000000
                  datapointer
                          DCD      0x00000000
                  datapointer_prev
                          DCD      0x00000000
                  error_direction
000010  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32_USB_HOST_Library\\Class\\MSC\\src\\usbh_msc_bot.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_usbh_msc_bot_c_2abeb359____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_usbh_msc_bot_c_2abeb359____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_usbh_msc_bot_c_2abeb359____REVSH|
#line 144
|__asm___14_usbh_msc_bot_c_2abeb359____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
